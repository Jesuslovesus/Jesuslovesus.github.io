{"version":3,"sources":["webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./src/components/header/header.vue?0455","webpack:///./src/views/login/index.vue?e970","webpack:///./src/views/login/index.vue","webpack:///src/components/header/header.vue","webpack:///./src/components/header/header.vue","webpack:///src/views/login/index.vue"],"names":["$","selector","context","arr","i","Dom7","els","tempParent","html","trim","indexOf","toCreate","doc","createElement","innerHTML","childNodes","length","push","match","querySelectorAll","getElementById","split","nodeType","win","unique","uniqueArray","onResize","params","el","this","offsetWidth","breakpoints","setBreakpoint","allowSlideNext","allowSlidePrev","snapGrid","updateSize","updateSlides","freeMode","newTranslate","Math","min","max","translate","maxTranslate","minTranslate","setTranslate","updateActiveIndex","updateSlidesClasses","autoHeight","updateAutoHeight","slidesPerView","isEnd","centeredSlides","slideTo","slides","activeIndex","watchOverflow","checkOverflow","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","createEvent","initEvent","children","style","setAttribute","getElementsByTagName","location","hash","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","[object Object]","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","attrName","getAttribute","removeAttr","removeAttribute","data","key","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","targetSelector","listener","apply","parents","k","handleEvent","eventType","capture","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","fireCallBack","call","dom","outerWidth","includeMargins","styles","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","Object","keys","forEach","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","self","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","slice","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","update","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slideClass","slidesLength","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesNumberEvenToRows","slidesPerColumn","floor","ceil","slidesPerColumnFill","slideSize","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","emit","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","speed","activeSlides","newHeight","setTransition","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","offsetCenter","slideVisibleClass","slideProgress","slideBefore","slideAfter","progress","updateProgress","translatesDiff","isBeginning","wasBeginning","wasEnd","realIndex","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","activeSlide","loop","slideDuplicateClass","nextSlide","prevSlide","newActiveIndex","previousIndex","previousRealIndex","snapIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","byController","x","y","previousTranslate","newProgress","transition$1","transitionStart","runCallbacks","direction","dir","animating","swiper_esm_bundle_slide","internal","swiper","slideIndex","preventInteractionOnTransition","initialSlide","initialized","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","swiper_esm_bundle_events","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","allowTouchMove","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_breakpoints","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","points","point","sort","b","innerWidth","swiper_esm_bundle_Browser","isIE","isSafari","isUiWebView","test","defaults","init","uniqueNavElements","preloadImages","updateOnImagesReady","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","onReady","image","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","onRendered","lazy","load","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","zoomedSlideClass","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","setControlledTranslate","by","getInterpolateFunction","controlledTranslate","multiplier","inverse","controlled","control","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","hideOnClick","number","render","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","__webpack_exports__","esExports","_h","$createElement","_c","_self","staticClass","_v","staticRenderFns","_vm","_l","list","bg","_s","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_75707062_hasScoped_true_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__","__webpack_require__","__vue_styles__","ssrContext","Component","normalizeComponent","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue___default","screenfull","_index2","default","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_db0a55da_hasScoped_true_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_header_vue__","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_header_vue___default","Swiper","_swiper2","headerTop","_header2"],"mappings":"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","file":"static/js/1.e6ab2f9396d47400313f.js","sourcesContent":["/**\n * Dom7 2.0.7\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: June 14, 2018\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.3.5\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: July 31, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (swiper.isHorizontal()) {\n        slideSize = slide[0].getBoundingClientRect().width\n          + parseFloat(slideStyles.getPropertyValue('margin-left'))\n          + parseFloat(slideStyles.getPropertyValue('margin-right'));\n      } else {\n        slideSize = slide[0].getBoundingClientRect().height\n          + parseFloat(slideStyles.getPropertyValue('margin-top'))\n          + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data$$1.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n    if (preventDefault && swiper.allowTouchMove) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data$$1.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n    const needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakPointsParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakPointsParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if (Browser.isIE && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object') return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1);\n      slidesBefore = slidesPerGroup;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => a < b).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      swiper.virtual.update();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop) return;\n        swiper.slideNext();\n      });\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop) return;\n        swiper.slidePrev();\n      });\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click');\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click');\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      swiper.slideTo(swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index());\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = ","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"header-wrap\"},[_c('div',{staticClass:\"left\"}),_vm._v(\" \"),_c('div',{staticClass:\"right\"}),_vm._v(\" \"),_c('div',{staticClass:\"screen-full-icon\"},[_c('screenfull')],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-db0a55da\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/header/header.vue\n// module id = FBjA\n// module chunks = 1","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"place-wrap\"},[_c('header',{staticClass:\"header-top\"},[_c('header-top')],1),_vm._v(\" \"),_c('div',{staticClass:\"con-wrap\"},[_c('div',{staticClass:\"swiper-box\"},[_c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.place),function(list,index){return _c('div',{key:index,staticClass:\"swiper-slide\"},[_c('div',{staticClass:\"img-box\",style:({background:list.bg})}),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(list.label))])])})),_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination swiper-pagination-white\"})])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-75707062\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/login/index.vue\n// module id = Sh5r\n// module chunks = 1","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-75707062\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-75707062\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=1!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-75707062\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-75707062\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/login/index.vue\n// module id = T+/8\n// module chunks = 1","<template>\n  <div class=\"header-wrap\">\n    <div class=\"left\">\n\n    </div>\n    <div class=\"right\">\n\n    </div>\n\n    <div class=\"screen-full-icon\">\n      <screenfull></screenfull>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport screenfull from '../screenfull/index'\nexport default {\n  name: '',\n  data() {\n    return {}\n  },\n  components: {\n    screenfull\n  },\n  mounted() {},\n  methods: {}\n}\n</script>\n\n<style scoped lang=\"less\">\n@import '../../assets/style/color.less';\n.header-wrap {\n  // position: relative;\n  // top: 0;\n  // left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: @blue-dark;\n  .screen-full-icon {\n    float: right;\n    height: 30px;\n    width: 30px;\n    // position: absolute;\n    // top: 50%;\n    // right: 15px;\n    // margin-top: -15px;\n    color: @white;\n    overflow: hidden;\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/header/header.vue","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-db0a55da\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./header.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./header.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./header.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-db0a55da\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./header.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-db0a55da\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/header/header.vue\n// module id = hxP8\n// module chunks = 1","<template>\n  \n  <div class=\"place-wrap\">\n    <!-- 顶部导航 -->\n    <header class=\"header-top\">\n      <header-top></header-top>\n    </header>\n    <!-- 首页 -->\n    <div class=\"con-wrap\">\n      <!-- 滑动选择 -->\n      <div class=\"swiper-box\">\n        <div class=\"swiper-container\">\n          <div class=\"swiper-wrapper\">\n              <!-- 每一块 -->\n              <div class=\"swiper-slide\" v-for=\"(list, index) in place\" :key=\"index\">\n                  <div class=\"img-box\" :style=\"{background:list.bg}\">\n                  </div>\n                  <p>{{list.label}}</p>\n              </div>\n          </div>\n          <div class=\"swiper-pagination swiper-pagination-white\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import Swiper from 'swiper'\n  import 'swiper/dist/css/swiper.min.css'\n  import headerTop from '../../components/header/header'\n  export default {\n    name: '',\n    data() {\n      return {\n        bg: '',\n        place: [\n          {\n            value: 'yunnan',\n            label: '云南',\n            bg: 'red'\n          },\n          {\n            value: 'yunnan',\n            label: '四川',\n            bg: 'green'\n          },\n          {\n            value: 'yunnan',\n            label: '西藏',\n            bg: 'pink'\n          }\n        ]\n      }\n    },\n    mounted() {\n      new Swiper('.swiper-container', {\n        pagination: {\n          el: '.swiper-pagination'\n        },\n        paginationClickable: true,\n        loop: true,\n        autoplay: {\n          delay: 5000,\n          stopOnLastSlide: false,\n          disableOnInteraction: true\n        },\n        on: {\n          slideChangeTransitionEnd: function(){\n            // console.log(this.activeIndex)\n          },\n          transitionEnd: function(){\n            // console.log(this.activeIndex,\"--\",this.place)\n          }\n        },\n        effect: 'coverflow',\n        grabCursor: true,\n        centeredSlides: true,\n        slidesPerView: 'auto',\n        coverflowEffect: {\n          rotate: 50,\n          stretch: 0,\n          depth: 100,\n          modifier: 1,\n          slideShadows: false\n        }\n      })\n    },\n    components: {\n      Swiper,\n      headerTop\n    },\n    methods: {\n    }\n  }\n</script>\n\n<style scoped lang=\"less\">\n@import '../../assets/style/color.less';\n@import '../../assets/style/index.less';\n.place-wrap {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: @blue-dark;\n  .header-top {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: @header-top-login;\n    z-index: 10;\n  }\n  .con-wrap {\n    z-index: 9;    \n    position: absolute;\n    width: 100%;\n    height: 100%;\n  }\n}\n.swiper-box{\n  position: absolute;\n  bottom: 60px;\n  left: 0;\n  height: 60%;\n  width: 100%;\n}\n.swiper-slide{\n  width: 300px;\n  height: 460px;\n  .img-box{\n    width: 100%;\n    height: 330px;\n  }\n  p{\n    font-size: 22px;\n    text-align: center;\n    background: @white;\n    padding: 24px 0;\n  }\n}\n\n</style>\n<style lang=\"less\">\n.place-wrap{\n  .swiper-container {\n  // .swiper-wrapper {\n  // }\n  // .swiper-slide {\n  // }\n  .swiper-pagination-bullet {\n      width: 30px;\n      height: 2px;\n      margin: 0px;\n      border-radius: 0%;\n  }\n}\n}\n\n</style>\n\n\n\n\n// WEBPACK FOOTER //\n// src/views/login/index.vue"],"sourceRoot":""}